
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planName: 'planName',
  price: 'price',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  amount: 'amount',
  status: 'status',
  dueDate: 'dueDate',
  paidAt: 'paidAt',
  createdAt: 'createdAt'
};

exports.Prisma.MikrotikDeviceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  ip: 'ip',
  mac: 'mac',
  username: 'username',
  password: 'password',
  port: 'port',
  status: 'status',
  model: 'model',
  version: 'version',
  uptime: 'uptime',
  cpu: 'cpu',
  memory: 'memory',
  interfaces: 'interfaces',
  lastSeen: 'lastSeen',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DomainScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cloudflareId: 'cloudflareId',
  status: 'status',
  nameservers: 'nameservers',
  created: 'created',
  expires: 'expires',
  sslStatus: 'sslStatus',
  dnsRecords: 'dnsRecords',
  raw: 'raw',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProxmoxServerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  baseUrl: 'baseUrl',
  user: 'user',
  tokenId: 'tokenId',
  tokenSecret: 'tokenSecret',
  insecure: 'insecure',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProxmoxNodeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  status: 'status',
  maxcpu: 'maxcpu',
  maxmem: 'maxmem',
  cpu: 'cpu',
  mem: 'mem',
  uptime: 'uptime',
  raw: 'raw',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  serverId: 'serverId'
};

exports.Prisma.ProxmoxVMScalarFieldEnum = {
  id: 'id',
  vmid: 'vmid',
  nodeName: 'nodeName',
  serverId: 'serverId',
  name: 'name',
  type: 'type',
  status: 'status',
  maxcpu: 'maxcpu',
  maxmem: 'maxmem',
  cpu: 'cpu',
  mem: 'mem',
  tags: 'tags',
  sshHost: 'sshHost',
  sshPort: 'sshPort',
  sshUser: 'sshUser',
  raw: 'raw',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProxmoxMetricScalarFieldEnum = {
  id: 'id',
  vmId: 'vmId',
  vmNumericId: 'vmNumericId',
  nodeName: 'nodeName',
  serverId: 'serverId',
  cpu: 'cpu',
  mem: 'mem',
  disk: 'disk',
  netin: 'netin',
  netout: 'netout',
  ts: 'ts'
};

exports.Prisma.SiteScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  notes: 'notes',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  vid: 'vid',
  siteId: 'siteId',
  description: 'description',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NetworkSubnetScalarFieldEnum = {
  id: 'id',
  cidr: 'cidr',
  name: 'name',
  description: 'description',
  siteId: 'siteId',
  vlanId: 'vlanId',
  parentId: 'parentId',
  gatewayIpId: 'gatewayIpId',
  tags: 'tags',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NetworkIPScalarFieldEnum = {
  id: 'id',
  address: 'address',
  subnetId: 'subnetId',
  status: 'status',
  deviceId: 'deviceId',
  interface: 'interface',
  fqdn: 'fqdn',
  purpose: 'purpose',
  mac: 'mac',
  tags: 'tags',
  notes: 'notes',
  lastSeen: 'lastSeen',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NetworkDeviceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  siteId: 'siteId',
  mgmtIp: 'mgmtIp',
  vendor: 'vendor',
  model: 'model',
  serial: 'serial',
  osVersion: 'osVersion',
  tags: 'tags',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NetworkServiceScalarFieldEnum = {
  id: 'id',
  deviceId: 'deviceId',
  name: 'name',
  protocol: 'protocol',
  port: 'port',
  externalPort: 'externalPort',
  targetIp: 'targetIp',
  targetFqdn: 'targetFqdn',
  enabled: 'enabled',
  description: 'description',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.IPStatus = exports.$Enums.IPStatus = {
  AVAILABLE: 'AVAILABLE',
  RESERVED: 'RESERVED',
  ASSIGNED: 'ASSIGNED'
};

exports.DeviceType = exports.$Enums.DeviceType = {
  ROUTER: 'ROUTER',
  SWITCH: 'SWITCH',
  FIREWALL: 'FIREWALL',
  SERVER: 'SERVER',
  VM: 'VM',
  AP: 'AP',
  NAS: 'NAS',
  OTHER: 'OTHER'
};

exports.Protocol = exports.$Enums.Protocol = {
  TCP: 'TCP',
  UDP: 'UDP',
  SCTP: 'SCTP',
  ICMP: 'ICMP',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  User: 'User',
  Subscription: 'Subscription',
  Invoice: 'Invoice',
  MikrotikDevice: 'MikrotikDevice',
  Domain: 'Domain',
  ProxmoxServer: 'ProxmoxServer',
  ProxmoxNode: 'ProxmoxNode',
  ProxmoxVM: 'ProxmoxVM',
  ProxmoxMetric: 'ProxmoxMetric',
  Site: 'Site',
  Vlan: 'Vlan',
  NetworkSubnet: 'NetworkSubnet',
  NetworkIP: 'NetworkIP',
  NetworkDevice: 'NetworkDevice',
  NetworkService: 'NetworkService'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ontec\\Videos\\github\\SISTEMA_ADMIN\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ontec\\Videos\\github\\SISTEMA_ADMIN\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  name      String\n  email     String   @unique\n  password  String\n  role      String   @default(\"user\") // user or admin\n  phone     String?\n  address   String?\n  city      String?\n  state     String?\n  zipCode   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  subscriptions Subscription[]\n}\n\nmodel Subscription {\n  id        String   @id @default(cuid())\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  planName  String\n  price     Float\n  status    String // active, canceled, etc.\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  invoices Invoice[]\n}\n\nmodel Invoice {\n  id             String       @id @default(cuid())\n  subscriptionId String\n  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n  amount         Float\n  status         String // paid, pending, etc.\n  dueDate        DateTime\n  paidAt         DateTime?\n  createdAt      DateTime     @default(now())\n}\n\nmodel MikrotikDevice {\n  id         String    @id @default(cuid())\n  name       String // Nome do dispositivo\n  ip         String // Endereço IP\n  mac        String? // Endereço MAC\n  username   String // Usuário para conexão\n  password   String // Senha para conexão\n  port       Int       @default(8728) // Porta API (padrão 8728)\n  status     String    @default(\"offline\") // online, offline, error\n  model      String? // Modelo do dispositivo\n  version    String? // Versão do RouterOS\n  uptime     String? // Tempo de atividade\n  cpu        Float? // Uso da CPU (%)\n  memory     Float? // Uso da memória (%)\n  interfaces Int? // Número de interfaces\n  lastSeen   DateTime? // Última vez que foi visto online\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n}\n\nmodel Domain {\n  id           String    @id @default(cuid())\n  name         String    @unique\n  cloudflareId String? // zone id from Cloudflare\n  status       String    @default(\"active\") // active, pending, error\n  nameservers  String? // JSON stringified array of nameservers\n  created      DateTime?\n  expires      DateTime?\n  sslStatus    String? // active, pending, error\n  dnsRecords   Int       @default(0)\n  raw          String? // raw JSON payload from Cloudflare as string\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n}\n\n// Proxmox persistence (optional)\nmodel ProxmoxServer {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  baseUrl     String // e.g., https://host:8006/api2/json\n  user        String // e.g., root@pam\n  tokenId     String // token id (without user@realm!)\n  tokenSecret String // token secret\n  insecure    Boolean  @default(false)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  nodes ProxmoxNode[]\n  vms   ProxmoxVM[]\n}\n\nmodel ProxmoxNode {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  status    String?\n  maxcpu    Int?\n  maxmem    BigInt?\n  cpu       Float?\n  mem       BigInt?\n  uptime    Int?\n  raw       String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  vms ProxmoxVM[]\n\n  // Multi-server\n  serverId String?\n  server   ProxmoxServer? @relation(fields: [serverId], references: [id])\n\n  @@unique([name, serverId])\n}\n\nmodel ProxmoxVM {\n  id        String       @id @default(cuid())\n  vmid      Int\n  nodeName  String\n  serverId  String?\n  node      ProxmoxNode? @relation(fields: [nodeName, serverId], references: [name, serverId])\n  name      String?\n  type      String?\n  status    String?\n  maxcpu    Int?\n  maxmem    BigInt?\n  cpu       Float?\n  mem       BigInt?\n  tags      String?\n  sshHost   String?\n  sshPort   Int?\n  sshUser   String?\n  raw       String?\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  metrics ProxmoxMetric[]\n\n  server ProxmoxServer? @relation(fields: [serverId], references: [id])\n\n  @@unique([vmid, nodeName, serverId])\n}\n\nmodel ProxmoxMetric {\n  id          String     @id @default(cuid())\n  vmId        String?\n  vm          ProxmoxVM? @relation(fields: [vmId], references: [id], onDelete: Cascade)\n  vmNumericId Int?\n  nodeName    String?\n  serverId    String?\n  cpu         Float?\n  mem         BigInt?\n  disk        Float?\n  netin       BigInt?\n  netout      BigInt?\n  ts          DateTime   @default(now())\n}\n\n// Network inventory & documentation\n\nenum IPStatus {\n  AVAILABLE\n  RESERVED\n  ASSIGNED\n}\n\nenum DeviceType {\n  ROUTER\n  SWITCH\n  FIREWALL\n  SERVER\n  VM\n  AP\n  NAS\n  OTHER\n}\n\nenum Protocol {\n  TCP\n  UDP\n  SCTP\n  ICMP\n  OTHER\n}\n\nmodel Site {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  address   String?\n  notes     String?\n  tags      String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  subnets NetworkSubnet[]\n  devices NetworkDevice[]\n  vlans   Vlan[]\n}\n\nmodel Vlan {\n  id          String   @id @default(cuid())\n  name        String\n  vid         Int\n  siteId      String?\n  site        Site?    @relation(fields: [siteId], references: [id])\n  description String?\n  tags        String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  subnets NetworkSubnet[]\n\n  @@unique([vid, siteId])\n}\n\nmodel NetworkSubnet {\n  id          String          @id @default(cuid())\n  cidr        String // e.g., 192.168.1.0/24\n  name        String?\n  description String?\n  siteId      String?\n  site        Site?           @relation(fields: [siteId], references: [id])\n  vlanId      String?\n  vlan        Vlan?           @relation(fields: [vlanId], references: [id])\n  parentId    String?\n  parent      NetworkSubnet?  @relation(\"SubnetHierarchy\", fields: [parentId], references: [id])\n  children    NetworkSubnet[] @relation(\"SubnetHierarchy\")\n  gatewayIpId String?\n  tags        String?\n  notes       String?\n  createdAt   DateTime        @default(now())\n  updatedAt   DateTime        @updatedAt\n\n  ips NetworkIP[]\n\n  @@index([cidr])\n}\n\nmodel NetworkIP {\n  id        String         @id @default(cuid())\n  address   String // IPv4/IPv6 address\n  subnetId  String\n  subnet    NetworkSubnet  @relation(fields: [subnetId], references: [id], onDelete: Cascade)\n  status    IPStatus       @default(AVAILABLE)\n  deviceId  String?\n  device    NetworkDevice? @relation(fields: [deviceId], references: [id])\n  interface String?\n  fqdn      String?\n  purpose   String?\n  mac       String?\n  tags      String?\n  notes     String?\n  lastSeen  DateTime?\n  createdAt DateTime       @default(now())\n  updatedAt DateTime       @updatedAt\n\n  @@index([address])\n}\n\nmodel NetworkDevice {\n  id        String     @id @default(cuid())\n  name      String\n  type      DeviceType @default(OTHER)\n  siteId    String?\n  site      Site?      @relation(fields: [siteId], references: [id])\n  mgmtIp    String?\n  vendor    String?\n  model     String?\n  serial    String?\n  osVersion String?\n  tags      String?\n  notes     String?\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  services NetworkService[]\n  ips      NetworkIP[]\n}\n\nmodel NetworkService {\n  id           String        @id @default(cuid())\n  deviceId     String\n  device       NetworkDevice @relation(fields: [deviceId], references: [id], onDelete: Cascade)\n  name         String\n  protocol     Protocol      @default(TCP)\n  port         Int\n  externalPort Int?\n  targetIp     String?\n  targetFqdn   String?\n  enabled      Boolean       @default(true)\n  description  String?\n  tags         String?\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n}\n",
  "inlineSchemaHash": "19bc6b74097f49bbec8afc1695b306faf91a50d8618339c9ab5d53ee180ef5aa",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToUser\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionToUser\"},{\"name\":\"planName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invoices\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToSubscription\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"InvoiceToSubscription\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MikrotikDevice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mac\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"port\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uptime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpu\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"memory\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"interfaces\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Domain\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cloudflareId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nameservers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sslStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dnsRecords\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProxmoxServer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenSecret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insecure\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nodes\",\"kind\":\"object\",\"type\":\"ProxmoxNode\",\"relationName\":\"ProxmoxNodeToProxmoxServer\"},{\"name\":\"vms\",\"kind\":\"object\",\"type\":\"ProxmoxVM\",\"relationName\":\"ProxmoxServerToProxmoxVM\"}],\"dbName\":null},\"ProxmoxNode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxcpu\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxmem\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"cpu\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"mem\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"uptime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vms\",\"kind\":\"object\",\"type\":\"ProxmoxVM\",\"relationName\":\"ProxmoxNodeToProxmoxVM\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"ProxmoxServer\",\"relationName\":\"ProxmoxNodeToProxmoxServer\"}],\"dbName\":null},\"ProxmoxVM\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vmid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nodeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"node\",\"kind\":\"object\",\"type\":\"ProxmoxNode\",\"relationName\":\"ProxmoxNodeToProxmoxVM\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxcpu\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxmem\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"cpu\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"mem\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sshHost\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sshPort\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sshUser\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"raw\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metrics\",\"kind\":\"object\",\"type\":\"ProxmoxMetric\",\"relationName\":\"ProxmoxMetricToProxmoxVM\"},{\"name\":\"server\",\"kind\":\"object\",\"type\":\"ProxmoxServer\",\"relationName\":\"ProxmoxServerToProxmoxVM\"}],\"dbName\":null},\"ProxmoxMetric\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vmId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vm\",\"kind\":\"object\",\"type\":\"ProxmoxVM\",\"relationName\":\"ProxmoxMetricToProxmoxVM\"},{\"name\":\"vmNumericId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nodeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cpu\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"mem\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"disk\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"netin\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"netout\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"ts\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Site\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subnets\",\"kind\":\"object\",\"type\":\"NetworkSubnet\",\"relationName\":\"NetworkSubnetToSite\"},{\"name\":\"devices\",\"kind\":\"object\",\"type\":\"NetworkDevice\",\"relationName\":\"NetworkDeviceToSite\"},{\"name\":\"vlans\",\"kind\":\"object\",\"type\":\"Vlan\",\"relationName\":\"SiteToVlan\"}],\"dbName\":null},\"Vlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vid\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"SiteToVlan\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subnets\",\"kind\":\"object\",\"type\":\"NetworkSubnet\",\"relationName\":\"NetworkSubnetToVlan\"}],\"dbName\":null},\"NetworkSubnet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cidr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"NetworkSubnetToSite\"},{\"name\":\"vlanId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vlan\",\"kind\":\"object\",\"type\":\"Vlan\",\"relationName\":\"NetworkSubnetToVlan\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"NetworkSubnet\",\"relationName\":\"SubnetHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"NetworkSubnet\",\"relationName\":\"SubnetHierarchy\"},{\"name\":\"gatewayIpId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ips\",\"kind\":\"object\",\"type\":\"NetworkIP\",\"relationName\":\"NetworkIPToNetworkSubnet\"}],\"dbName\":null},\"NetworkIP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subnetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subnet\",\"kind\":\"object\",\"type\":\"NetworkSubnet\",\"relationName\":\"NetworkIPToNetworkSubnet\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IPStatus\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"NetworkDevice\",\"relationName\":\"NetworkDeviceToNetworkIP\"},{\"name\":\"interface\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fqdn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mac\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NetworkDevice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DeviceType\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"NetworkDeviceToSite\"},{\"name\":\"mgmtIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serial\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"osVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"NetworkService\",\"relationName\":\"NetworkDeviceToNetworkService\"},{\"name\":\"ips\",\"kind\":\"object\",\"type\":\"NetworkIP\",\"relationName\":\"NetworkDeviceToNetworkIP\"}],\"dbName\":null},\"NetworkService\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"NetworkDevice\",\"relationName\":\"NetworkDeviceToNetworkService\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"protocol\",\"kind\":\"enum\",\"type\":\"Protocol\"},{\"name\":\"port\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"externalPort\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"targetIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetFqdn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

