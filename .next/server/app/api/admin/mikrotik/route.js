"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/mikrotik/route";
exports.ids = ["app/api/admin/mikrotik/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmikrotik%2Froute&page=%2Fapi%2Fadmin%2Fmikrotik%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmikrotik%2Froute.ts&appDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmikrotik%2Froute&page=%2Fapi%2Fadmin%2Fmikrotik%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmikrotik%2Froute.ts&appDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_ontec_Videos_github_SISTEMA_ADMIN_src_app_api_admin_mikrotik_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/admin/mikrotik/route.ts */ \"(rsc)/./src/app/api/admin/mikrotik/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/mikrotik/route\",\n        pathname: \"/api/admin/mikrotik\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/mikrotik/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\ontec\\\\Videos\\\\github\\\\SISTEMA_ADMIN\\\\src\\\\app\\\\api\\\\admin\\\\mikrotik\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_ontec_Videos_github_SISTEMA_ADMIN_src_app_api_admin_mikrotik_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/admin/mikrotik/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRm1pa3JvdGlrJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhZG1pbiUyRm1pa3JvdGlrJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYWRtaW4lMkZtaWtyb3RpayUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNvbnRlYyU1Q1ZpZGVvcyU1Q2dpdGh1YiU1Q1NJU1RFTUFfQURNSU4lNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q29udGVjJTVDVmlkZW9zJTVDZ2l0aHViJTVDU0lTVEVNQV9BRE1JTiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDeUM7QUFDdEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaXN0ZW1hLWFzc2luYXR1cmFzLz85YjgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXG9udGVjXFxcXFZpZGVvc1xcXFxnaXRodWJcXFxcU0lTVEVNQV9BRE1JTlxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxhZG1pblxcXFxtaWtyb3Rpa1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWRtaW4vbWlrcm90aWsvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hZG1pbi9taWtyb3Rpa1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWRtaW4vbWlrcm90aWsvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxvbnRlY1xcXFxWaWRlb3NcXFxcZ2l0aHViXFxcXFNJU1RFTUFfQURNSU5cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcYWRtaW5cXFxcbWlrcm90aWtcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2FkbWluL21pa3JvdGlrL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmikrotik%2Froute&page=%2Fapi%2Fadmin%2Fmikrotik%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmikrotik%2Froute.ts&appDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/admin/mikrotik/route.ts":
/*!*********************************************!*\
  !*** ./src/app/api/admin/mikrotik/route.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n/* harmony import */ var _lib_mikrotik_manager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/mikrotik/manager */ \"(rsc)/./src/lib/mikrotik/manager.ts\");\n\n\n\n\n\n// GET /api/admin/mikrotik - Listar todos os dispositivos\nasync function GET(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || session.user.role !== \"admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const url = new URL(request.url);\n        const refresh = url.searchParams.get(\"refresh\") === \"true\";\n        const devices = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.findMany({\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        });\n        if (refresh) {\n            // Iterate devices sequentially to avoid opening many connections at once\n            for (const device of devices){\n                try {\n                    const result = await (0,_lib_mikrotik_manager__WEBPACK_IMPORTED_MODULE_4__.withMikrotikConnection)({\n                        id: device.id,\n                        name: device.name,\n                        ip: device.ip,\n                        mac: device.mac || undefined,\n                        username: device.username,\n                        password: device.password,\n                        port: device.port\n                    }, async (manager)=>{\n                        const sys = await manager.getSystemInfo();\n                        return sys;\n                    });\n                    if (result) {\n                        // compute memory percent if possible\n                        let memoryPercent = null;\n                        if (typeof result.freeMemory === \"number\" && typeof result.totalMemory === \"number\" && result.totalMemory > 0) {\n                            memoryPercent = Math.round((1 - result.freeMemory / result.totalMemory) * 100);\n                        }\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.update({\n                            where: {\n                                id: device.id\n                            },\n                            data: {\n                                status: \"online\",\n                                model: result.model || device.model,\n                                version: result.version || device.version,\n                                uptime: result.uptime || device.uptime,\n                                cpu: typeof result.cpuLoad === \"number\" ? result.cpuLoad : device.cpu,\n                                memory: memoryPercent ?? device.memory,\n                                lastSeen: new Date()\n                            }\n                        });\n                    } else {\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.update({\n                            where: {\n                                id: device.id\n                            },\n                            data: {\n                                status: \"offline\"\n                            }\n                        });\n                    }\n                } catch (innerError) {\n                    console.error(`Error checking device ${device.id}:`, innerError);\n                    try {\n                        await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.update({\n                            where: {\n                                id: device.id\n                            },\n                            data: {\n                                status: \"offline\"\n                            }\n                        });\n                    } catch (uErr) {\n                        console.error(\"Error updating device status to offline:\", uErr);\n                    }\n                }\n            }\n            const updated = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.findMany({\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(updated);\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(devices);\n    } catch (error) {\n        console.error(\"Error fetching Mikrotik devices:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST /api/admin/mikrotik - Criar novo dispositivo\nasync function POST(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session || session.user.role !== \"admin\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const body = await request.json();\n        const { name, ip, mac, username, password, port } = body;\n        if (!name || !ip || !username || !password) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Nome, IP, usu\\xe1rio e senha s\\xe3o obrigat\\xf3rios\"\n            }, {\n                status: 400\n            });\n        }\n        // Verificar se já existe um dispositivo com este nome\n        const existingDevice = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.findFirst({\n            where: {\n                name\n            }\n        });\n        if (existingDevice) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"J\\xe1 existe um dispositivo com este nome\"\n            }, {\n                status: 400\n            });\n        }\n        const device = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.mikrotikDevice.create({\n            data: {\n                name,\n                ip,\n                mac,\n                username,\n                password,\n                port: port || 8728\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(device, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Error creating Mikrotik device:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/admin/mikrotik/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"(rsc)/./node_modules/@next-auth/prisma-adapter/dist/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_1__.PrismaAdapter)(_lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma),\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_3__.prisma.user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user) {\n                    return null;\n                }\n                const isPasswordValid = await bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().compare(credentials.password, user.password);\n                if (!isPasswordValid) {\n                    return null;\n                }\n                return {\n                    id: user.id,\n                    email: user.email,\n                    name: user.name,\n                    role: user.role\n                };\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.role = user.role;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.sub;\n                session.user.role = token.role;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ2lFO0FBQ1I7QUFDNUI7QUFDUTtBQXdCOUIsTUFBTUksY0FBK0I7SUFDMUNDLFNBQVNKLHdFQUFhQSxDQUFDRSwrQ0FBTUE7SUFDN0JHLFdBQVc7UUFDVE4sMkVBQW1CQSxDQUFDO1lBQ2xCTyxNQUFNO1lBQ05DLGFBQWE7Z0JBQ1hDLE9BQU87b0JBQUVDLE9BQU87b0JBQVNDLE1BQU07Z0JBQVE7Z0JBQ3ZDQyxVQUFVO29CQUFFRixPQUFPO29CQUFZQyxNQUFNO2dCQUFXO1lBQ2xEO1lBQ0EsTUFBTUUsV0FBVUwsV0FBVztnQkFDekIsSUFBSSxDQUFDQSxhQUFhQyxTQUFTLENBQUNELGFBQWFJLFVBQVU7b0JBQ2pELE9BQU87Z0JBQ1Q7Z0JBRUEsTUFBTUUsT0FBTyxNQUFNWCwrQ0FBTUEsQ0FBQ1csSUFBSSxDQUFDQyxVQUFVLENBQUM7b0JBQ3hDQyxPQUFPO3dCQUFFUCxPQUFPRCxZQUFZQyxLQUFLO29CQUFDO2dCQUNwQztnQkFFQSxJQUFJLENBQUNLLE1BQU07b0JBQ1QsT0FBTztnQkFDVDtnQkFFQSxNQUFNRyxrQkFBa0IsTUFBTWYsdURBQWMsQ0FBQ00sWUFBWUksUUFBUSxFQUFFRSxLQUFLRixRQUFRO2dCQUVoRixJQUFJLENBQUNLLGlCQUFpQjtvQkFDcEIsT0FBTztnQkFDVDtnQkFFQSxPQUFPO29CQUNMRSxJQUFJTCxLQUFLSyxFQUFFO29CQUNYVixPQUFPSyxLQUFLTCxLQUFLO29CQUNqQkYsTUFBTU8sS0FBS1AsSUFBSTtvQkFDZmEsTUFBTSxLQUFjQSxJQUFJO2dCQUMxQjtZQUNGO1FBQ0Y7S0FDRDtJQUNEQyxTQUFTO1FBQ1BDLFVBQVU7SUFDWjtJQUNBQyxXQUFXO1FBQ1QsTUFBTUMsS0FBSSxFQUFFQyxLQUFLLEVBQUVYLElBQUksRUFBTztZQUM1QixJQUFJQSxNQUFNO2dCQUNSVyxNQUFNTCxJQUFJLEdBQUdOLEtBQUtNLElBQUk7WUFDeEI7WUFDQSxPQUFPSztRQUNUO1FBQ0EsTUFBTUosU0FBUSxFQUFFQSxPQUFPLEVBQUVJLEtBQUssRUFBTztZQUNuQyxJQUFJQSxPQUFPO2dCQUNUSixRQUFRUCxJQUFJLENBQUNLLEVBQUUsR0FBR00sTUFBTUMsR0FBRztnQkFDM0JMLFFBQVFQLElBQUksQ0FBQ00sSUFBSSxHQUFHSyxNQUFNTCxJQUFJO1lBQ2hDO1lBQ0EsT0FBT0M7UUFDVDtJQUNGO0lBQ0FNLE9BQU87UUFDTEMsUUFBUTtJQUNWO0FBQ0YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Npc3RlbWEtYXNzaW5hdHVyYXMvLi9zcmMvbGliL2F1dGgudHM/NjY5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXV0aE9wdGlvbnMsIERlZmF1bHRTZXNzaW9uIH0gZnJvbSAnbmV4dC1hdXRoJ1xyXG5pbXBvcnQgQ3JlZGVudGlhbHNQcm92aWRlciBmcm9tICduZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzJ1xyXG5pbXBvcnQgeyBQcmlzbWFBZGFwdGVyIH0gZnJvbSAnQG5leHQtYXV0aC9wcmlzbWEtYWRhcHRlcidcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcydcclxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJ1xyXG5cclxuZGVjbGFyZSBtb2R1bGUgJ25leHQtYXV0aCcge1xyXG4gIGludGVyZmFjZSBTZXNzaW9uIHtcclxuICAgIHVzZXI6IHtcclxuICAgICAgaWQ6IHN0cmluZ1xyXG4gICAgICByb2xlOiBzdHJpbmdcclxuICAgIH0gJiBEZWZhdWx0U2Vzc2lvblsndXNlciddXHJcbiAgfVxyXG59XHJcblxyXG5kZWNsYXJlIG1vZHVsZSAnbmV4dC1hdXRoL2p3dCcge1xyXG4gIGludGVyZmFjZSBKV1Qge1xyXG4gICAgcm9sZTogc3RyaW5nXHJcbiAgfVxyXG59XHJcblxyXG5pbnRlcmZhY2UgVXNlcldpdGhSb2xlIHtcclxuICBpZDogc3RyaW5nXHJcbiAgZW1haWw6IHN0cmluZ1xyXG4gIG5hbWU6IHN0cmluZ1xyXG4gIHJvbGU6IHN0cmluZ1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnM6IE5leHRBdXRoT3B0aW9ucyA9IHtcclxuICBhZGFwdGVyOiBQcmlzbWFBZGFwdGVyKHByaXNtYSksXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBDcmVkZW50aWFsc1Byb3ZpZGVyKHtcclxuICAgICAgbmFtZTogJ2NyZWRlbnRpYWxzJyxcclxuICAgICAgY3JlZGVudGlhbHM6IHtcclxuICAgICAgICBlbWFpbDogeyBsYWJlbDogJ0VtYWlsJywgdHlwZTogJ2VtYWlsJyB9LFxyXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiAnUGFzc3dvcmQnLCB0eXBlOiAncGFzc3dvcmQnIH1cclxuICAgICAgfSxcclxuICAgICAgYXN5bmMgYXV0aG9yaXplKGNyZWRlbnRpYWxzKSB7XHJcbiAgICAgICAgaWYgKCFjcmVkZW50aWFscz8uZW1haWwgfHwgIWNyZWRlbnRpYWxzPy5wYXNzd29yZCkge1xyXG4gICAgICAgICAgcmV0dXJuIG51bGxcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcclxuICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiBjcmVkZW50aWFscy5lbWFpbCB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgaXNQYXNzd29yZFZhbGlkID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUoY3JlZGVudGlhbHMucGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpXHJcblxyXG4gICAgICAgIGlmICghaXNQYXNzd29yZFZhbGlkKSB7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIGlkOiB1c2VyLmlkLFxyXG4gICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsXHJcbiAgICAgICAgICBuYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgICByb2xlOiAodXNlciBhcyBhbnkpLnJvbGUsXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIF0sXHJcbiAgc2Vzc2lvbjoge1xyXG4gICAgc3RyYXRlZ3k6ICdqd3QnIGFzIGNvbnN0XHJcbiAgfSxcclxuICBjYWxsYmFja3M6IHtcclxuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH06IGFueSkge1xyXG4gICAgICBpZiAodXNlcikge1xyXG4gICAgICAgIHRva2VuLnJvbGUgPSB1c2VyLnJvbGVcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdG9rZW5cclxuICAgIH0sXHJcbiAgICBhc3luYyBzZXNzaW9uKHsgc2Vzc2lvbiwgdG9rZW4gfTogYW55KSB7XHJcbiAgICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgIHNlc3Npb24udXNlci5pZCA9IHRva2VuLnN1YiFcclxuICAgICAgICBzZXNzaW9uLnVzZXIucm9sZSA9IHRva2VuLnJvbGVcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gc2Vzc2lvblxyXG4gICAgfVxyXG4gIH0sXHJcbiAgcGFnZXM6IHtcclxuICAgIHNpZ25JbjogJy9sb2dpbicsXHJcbiAgfSxcclxufSJdLCJuYW1lcyI6WyJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiUHJpc21hQWRhcHRlciIsImJjcnlwdCIsInByaXNtYSIsImF1dGhPcHRpb25zIiwiYWRhcHRlciIsInByb3ZpZGVycyIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaXNQYXNzd29yZFZhbGlkIiwiY29tcGFyZSIsImlkIiwicm9sZSIsInNlc3Npb24iLCJzdHJhdGVneSIsImNhbGxiYWNrcyIsImp3dCIsInRva2VuIiwic3ViIiwicGFnZXMiLCJzaWduSW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mikrotik/manager.ts":
/*!*************************************!*\
  !*** ./src/lib/mikrotik/manager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MikrotikManager: () => (/* binding */ MikrotikManager),\n/* harmony export */   withMikrotikConnection: () => (/* binding */ withMikrotikConnection)\n/* harmony export */ });\n/* harmony import */ var node_routeros__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-routeros */ \"(rsc)/./node_modules/node-routeros/dist/index.js\");\n/* harmony import */ var node_routeros__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_routeros__WEBPACK_IMPORTED_MODULE_0__);\n\nclass MikrotikManager {\n    async connect(device) {\n        try {\n            console.log(`Attempting to connect to ${device.ip}:${device.port} as ${device.username}`);\n            this.client = new node_routeros__WEBPACK_IMPORTED_MODULE_0__.RouterOSAPI({\n                host: device.ip,\n                user: device.username,\n                password: device.password,\n                port: device.port,\n                timeout: 10000,\n                keepalive: true\n            });\n            console.log(\"Calling client.connect()...\");\n            await this.client.connect();\n            console.log(\"Connection successful!\");\n            this.connected = true;\n            return true;\n        } catch (error) {\n            console.error(\"Failed to connect to Mikrotik device:\", error);\n            this.connected = false;\n            return false;\n        }\n    }\n    async disconnect() {\n        if (this.client && this.connected) {\n            try {\n                await this.client.close();\n            } catch (error) {\n                console.error(\"Error disconnecting from Mikrotik:\", error);\n            }\n            this.connected = false;\n            this.client = null;\n        }\n    }\n    async getSystemInfo() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const systemResource = await this.client.write(\"/system/resource/print\");\n            const identity = await this.client.write(\"/system/identity/print\");\n            if (!systemResource || systemResource.length === 0) {\n                return null;\n            }\n            const resource = systemResource[0];\n            return {\n                model: resource[\"board-name\"] || \"Unknown\",\n                version: resource[\"version\"] || \"Unknown\",\n                uptime: resource[\"uptime\"] || \"Unknown\",\n                cpuLoad: parseFloat(resource[\"cpu-load\"] || \"0\"),\n                freeMemory: parseFloat(resource[\"free-memory\"] || \"0\"),\n                totalMemory: parseFloat(resource[\"total-memory\"] || \"0\"),\n                freeHddSpace: parseFloat(resource[\"free-hdd-space\"] || \"0\"),\n                totalHddSpace: parseFloat(resource[\"total-hdd-space\"] || \"0\")\n            };\n        } catch (error) {\n            console.error(\"Error getting system info:\", error);\n            return null;\n        }\n    }\n    async getInterfaces() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const interfaces = await this.client.write(\"/interface/print\");\n            return interfaces.map((iface)=>({\n                    id: iface[\".id\"] || iface.id,\n                    name: iface.name || \"Unknown\",\n                    type: iface.type || \"Unknown\",\n                    macAddress: iface[\"mac-address\"],\n                    status: iface.running === \"true\" ? \"up\" : \"down\",\n                    rxByte: parseInt(iface[\"rx-byte\"] || \"0\"),\n                    txByte: parseInt(iface[\"tx-byte\"] || \"0\")\n                }));\n        } catch (error) {\n            console.error(\"Error getting interfaces:\", error);\n            return [];\n        }\n    }\n    async getIPAddresses() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const addrs = await this.client.write(\"/ip/address/print\");\n            return (addrs || []).map((a)=>({\n                    address: a.address,\n                    interface: a.interface\n                }));\n        } catch (e) {\n            console.error(\"Error getting IP addresses:\", e);\n            return [];\n        }\n    }\n    async getIpServices() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const svcs = await this.client.write(\"/ip/service/print\");\n            return (svcs || []).map((s)=>({\n                    name: s.name,\n                    port: Number(s.port ?? 0),\n                    disabled: s.disabled === \"true\"\n                }));\n        } catch (e) {\n            console.error(\"Error getting IP services:\", e);\n            return [];\n        }\n    }\n    async getLogs(lines = 50) {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            // Try without count parameter first\n            const logs = await this.client.write(\"/log/print\", {});\n            // Limit to the requested number of lines\n            return logs.slice(0, lines).map((log)=>({\n                    time: log.time,\n                    message: log.message\n                }));\n        } catch (error) {\n            console.error(\"Error getting logs:\", error);\n            return [];\n        }\n    }\n    async backupConfiguration(filename) {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const backupName = filename || `backup-${new Date().toISOString().slice(0, 19).replace(/:/g, \"-\")}.rsc`;\n            await this.client.write(\"/export\", {\n                file: backupName\n            });\n            // Wait a moment for the export to complete\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            return backupName;\n        } catch (error) {\n            console.error(\"Error creating backup:\", error);\n            return null;\n        }\n    }\n    async getBackupFiles() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const files = await this.client.write(\"/file/print\", {\n                \".proplist\": \"name,size,creation-time\"\n            });\n            return files.filter((file)=>file.name && (file.name.endsWith(\".rsc\") || file.name.endsWith(\".backup\")));\n        } catch (error) {\n            console.error(\"Error getting backup files:\", error);\n            return [];\n        }\n    }\n    async ping(host, count = 4) {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const result = await this.client.write(\"/ping\", {\n                address: host,\n                count: count,\n                interval: \"1s\"\n            });\n            return result;\n        } catch (error) {\n            console.error(\"Error pinging host:\", error);\n            return [];\n        }\n    }\n    async getWirelessClients() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const clients = await this.client.write(\"/interface/wireless/registration-table/print\");\n            return clients;\n        } catch (error) {\n            console.error(\"Error getting wireless clients:\", error);\n            return [];\n        }\n    }\n    async getARP() {\n        if (!this.connected || !this.client) throw new Error(\"Not connected to Mikrotik device\");\n        try {\n            const arp = await this.client.write(\"/ip/arp/print\");\n            return arp;\n        } catch (e) {\n            console.error(\"Error getting ARP table:\", e);\n            return [];\n        }\n    }\n    async getDHCPLeases() {\n        if (!this.connected || !this.client) throw new Error(\"Not connected to Mikrotik device\");\n        try {\n            const leases = await this.client.write(\"/ip/dhcp-server/lease/print\");\n            return leases;\n        } catch (e) {\n            console.error(\"Error getting DHCP leases:\", e);\n            return [];\n        }\n    }\n    async reboot() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            await this.client.write(\"/system/reboot\");\n            return true;\n        } catch (error) {\n            console.error(\"Error rebooting device:\", error);\n            return false;\n        }\n    }\n    async getPPPConnections() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const connections = await this.client.write(\"/ppp/active/print\");\n            return connections;\n        } catch (error) {\n            console.error(\"Error getting PPP connections:\", error);\n            return [];\n        }\n    }\n    async getPPPSecrets() {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const secrets = await this.client.write(\"/ppp/secret/print\");\n            return secrets;\n        } catch (error) {\n            console.error(\"Error getting PPP secrets:\", error);\n            return [];\n        }\n    }\n    async addPPPSecret(secretData) {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            const addCommand = {\n                name: secretData.name,\n                password: secretData.password\n            };\n            // Only add optional parameters if they have values\n            if (secretData.service && secretData.service.trim()) {\n                addCommand.service = secretData.service;\n            }\n            if (secretData.profile && secretData.profile.trim()) {\n                addCommand.profile = secretData.profile;\n            }\n            if (secretData.callerId && secretData.callerId.trim()) {\n                addCommand[\"caller-id\"] = secretData.callerId;\n            }\n            if (secretData.routes && secretData.routes.trim()) {\n                addCommand.routes = secretData.routes;\n            }\n            if (secretData.comment && secretData.comment.trim()) {\n                addCommand.comment = secretData.comment;\n            }\n            // Don't log the raw password - mask it for safety\n            const maskedCommand = {\n                ...addCommand,\n                password: addCommand.password ? \"****\" : undefined\n            };\n            console.log(\"Adding PPP secret with command:\", maskedCommand);\n            const result = await this.client.write(\"/ppp/secret/add\", addCommand);\n            console.log(\"PPP secret add result:\", result);\n            return result;\n        } catch (error) {\n            console.error(\"Error adding PPP secret:\", error);\n            throw error;\n        }\n    }\n    async removePPPConnection(connectionId) {\n        if (!this.connected || !this.client) {\n            throw new Error(\"Not connected to Mikrotik device\");\n        }\n        try {\n            // Remove the active PPP connection\n            const result = await this.client.write(\"/ppp/active/remove\", {\n                \".id\": connectionId\n            });\n            return result;\n        } catch (error) {\n            console.error(\"Error removing PPP connection:\", error);\n            throw error;\n        }\n    }\n    constructor(){\n        this.client = null;\n        this.connected = false;\n    }\n}\n// Factory function to create and manage Mikrotik connections\nasync function withMikrotikConnection(device, operation) {\n    const manager = new MikrotikManager();\n    try {\n        const connected = await manager.connect(device);\n        if (!connected) {\n            throw new Error(\"Failed to connect to Mikrotik device\");\n        }\n        return await operation(manager);\n    } catch (error) {\n        console.error(\"Mikrotik operation failed:\", error);\n        return null;\n    } finally{\n        await manager.disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mikrotik/manager.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsTUFBTUMsa0JBQWtCQztBQUlqQixNQUFNQyxTQUFTRixnQkFBZ0JFLE1BQU0sSUFBSSxJQUFJSCx3REFBWUEsR0FBRTtBQUVsRSxJQUFJSSxJQUF5QixFQUFjSCxnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zaXN0ZW1hLWFzc2luYXR1cmFzLy4vc3JjL2xpYi9wcmlzbWEudHM/MDFkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcclxuXHJcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XHJcbiAgcHJpc21hOiBQcmlzbWFDbGllbnQgfCB1bmRlZmluZWRcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPz8gbmV3IFByaXNtYUNsaWVudCgpXHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJnbG9iYWxGb3JQcmlzbWEiLCJnbG9iYWxUaGlzIiwicHJpc21hIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/@next-auth","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/@panva","vendor-chunks/oidc-token-hash","vendor-chunks/iconv-lite","vendor-chunks/source-map","vendor-chunks/node-routeros","vendor-chunks/debug","vendor-chunks/supports-color","vendor-chunks/source-map-support","vendor-chunks/safer-buffer","vendor-chunks/ms","vendor-chunks/has-flag","vendor-chunks/buffer-from"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmikrotik%2Froute&page=%2Fapi%2Fadmin%2Fmikrotik%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmikrotik%2Froute.ts&appDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Contec%5CVideos%5Cgithub%5CSISTEMA_ADMIN&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();